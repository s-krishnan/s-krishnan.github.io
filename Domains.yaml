---
# OpenAPI version identifier - required for OpenAPI 3.0 domains
openapi: 3.0.0

#######################
# Optional info section
#######################

info:
  description: "This is a collection of domain models for module catalogue in UCL"
  version: '3.0.0'
  title:  Domain models

components:
  
  links:
    nextpage:
    #nextpage: # <---- arbitrary name for the link
      description: Link to get next page.
      operationId: nextpage
      # or
      # operationRef: '#/paths/Module/get'
      parameters:
        $skipParam: $request.query.$skip
        $limit: $request.query.$limit
  
  schemas:

    Person:
      type: "object"
      description: domain model that represents contact detail of a UCL person
      required:
        - Name
      properties:
        PersonIdentifier:
          type: string
          title:  Unique identifier of the person in UCL 
        Name:
          type: "string"
          title: UCL person full name 
        Email:
          type: "string"
          format: "email"
          title: UCL person email address
  
    Period:
      type: "object"
      title: object to represents the period detail of the module delivery.
      required:
        - PeriodTitle
      properties:
        PeriodCode:
          title: module delivery period code.
          type: string
          minLength:  1
          maxLength:  6
        PeriodTitle:
          title:  module delivery period title.
          type: string
          minLength:  1
          maxLength:  50
    
    AcademicProgramme:
      type: "object"
      required:
        - ProgrammeCode
        - ProgrammeTitle
      description: |
            Assessment for the module is different depends on which programme student 
            is enrolled to. possible programme levels in UCL is 
            * U - Undergraduate 
            * P - Postgraduate
      properties:
        ProgrammeIdentifier:
          title: Programme unique identifier.
          type: string
          nullable: false
        ProgrammeLevel:
          title:  module delivery level title.
          type: string
          minLength:  1
          maxLength:  50
          nullable: false
    
    AcademicLevel:
      type: "object"
      required:
        - AcademicLevelCode
        - AcademicLevelTitle
      properties:
        AcademicLevelCode:
          title: module delivery level code.
          type: string
          minimum:  1
          maximum:  6
          nullable: false
        AcademicLevelTitle:
          title:  module delivery level title.
          type: string
          minimum:  1
          maximum:  50
          nullable: false
    
    AssessmentComponent:
      title: 'Applicable methods used for assessing the student success on the module such as Essay, Project, Course Assessment'
      type: object
      properties:
        AssessmentComponent:
          type: array
          items:
          - type: object
            required:
              - AssessmentWeightPercentage
              - AssessmentTitle
            properties:
              AssessmentComponentTitle:
                type: string
                minLength:  1
                maxLength:  120
              AssessmentComponentWeightPercentage:
                type: integer
                minimum:  0
                maximum:  100 
                format: int32
    
    AssessmentPatternList:
          type: object
          description:  |
            List of delivery assessment for this module delivery. This list is ordered by its sequence hence consumer application should honour list order, ignoring the order will not give the desired result.  
          properties:
            # AssessmentBodySequence:
            #   type: string
            #   minLength:  0
            #   maxLength:  3
            #   pattern:  ^(\d){3}$
            ModuleDeliveryAssessment:
              type: array
              items:
              - type: object
                properties:
                  _AssessmentComponentGroup:
                    type: string
                    minLength:  0
                    maxLength:  10
                  AssessmentComponentList:
                    $ref: '#/components/schemas/AssessmentComponent'

    ModuleDelivery:
      type: "object"
      required:
        - ModuleDeliveryIdentifier
        - ModuleDeliveryPeriod
        - ModuleDeliveryLevel
        - ModeOfStudy
        - ModuleDeliveryType
        - NumberOfStudents
        - ModuleDeliveryLocation
        - ModuleDeliveryContact
        - ModuleDeliveryAssessment
      title:  An instance of the module, this domain contains year specific module detail i.e. Detail stored in this domain is subject to change each year for a given module.
      properties:
     
        ModuleDeliveryIdentifier:
          title:  Unique identifier for this module delivery
          type: string
          minimum:  1
          maximum:  50
          nullable: false
        ModuleDeliveryPeriod:
          type: object
          $ref: "#/components/schemas/Period"
        AcademicLevel:
          $ref: "#/components/schemas/AcademicLevel"
        LevelOfStudy:
          title:  module delivery level title.
          description: |
            Assessment for the module is different depends on which programme student 
            is enrolled to. possible programme levels in UCL is 
            * U - Undergraduate 
            * P - Postgraduate
          type: string
          minLength:  1
          maxLength:  50
          nullable: false

        ModeOfStudy:
          title: Applicable mode of study for this module such as face-face.
          type: string
          minLength: 1
          maxLength: 15
          nullable: false
        ModuleDeliveryTypeCollection:
          type: object
          properties:
            ModuleDeliveryType:
              title: Delivery included in the module such as Field trips and Placements
              type: array
              items:
              - type: object
                properties:
                  _Name:
                    type: string
                    enum:
                      - Field Trips 
                      - Lab Work
                      - Work Placements
                      - Field Trips, Lab Work and Work Placements
                      - Field Trips and Lab Work
                      - Field Trips and Work Placements 
                      - Lab Work and Work Placements
        PreviousYearStudentCount:
          title: Number of students enrolled on module in previous year.  
          type: number
          minimum: 1
          format: int32
          maximum: 999
          nullable: false
        NumberOfStudents:
          title: Number of students on module for an acdemic year, if the selected year is the current academic year then this number is an indicative student count.
          type: number
          minimum: 1
          format: int32
          maximum: 999
          nullable: false
        ModuleDeliveryLocation:
          title: UCL location (Building / Geography) where the module is scheduled to be learned.
          $ref: "#/components/schemas/Location"
        ModuleDeliveryContact:
          title: Contact Information,
          $ref: '#/components/schemas/Person'
        ModuleDeliveryAssessmentList:
          $ref: '#/components/schemas/AssessmentPatternList'


    ModuleInstanceFull:
      type: object
      allOf:
        - type: object
          properties:
            ModuleIdentifier:
              $ref: '#/components/schemas/Module/properties/ModuleTitle'
            ModuleInstanceTitle:
              $ref: '#/components/schemas/Module/properties/ModuleTitle'
            ModuleInstanceSearchKeywords:
              $ref: '#/components/schemas/Module/properties/ModuleSearchKeywords'
            ModuleInstanceCode:
              $ref: '#/components/schemas/Module/properties/ModuleCode'
            ModuleInstanceLearningHours:
              $ref: '#/components/schemas/Module/properties/ModuleLearningHours'
            ModuleInstanceStudyHours:
              $ref: '#/components/schemas/Module/properties/ModuleStudyHours'
            ModuleInstanceSuperGroup:
              $ref: '#/components/schemas/Module/properties/ModuleSuperGroup'
            CEFRLevel:
              $ref: '#/components/schemas/Module/properties/CEFRLevel'
            ModuleInstanceContact:
              $ref: '#/components/schemas/Module/properties/ModuleContact'
            ModuleInstanceValue:
              $ref: '#/components/schemas/Module/properties/ModuleValue'
        - $ref: '#/components/schemas/ModuleInstance'

    ModuleInstance:
      type: object
      required:
        - AcademicYearCode
        - AcademicYearDescription
        - ModuleInstanceDescription
        - ModuleInstanceSubjectCollection
      title:  Module for given academic year.
      properties:
        AcademicYearCode:
          title: The module is applicable to the academic year.
          type: string
          format: int32
          minLength: 1
          maxLength: 4
          pattern: ^(\d)(4)$
          nullable: false
        AcademicYearDescription:
          title: Description of the academic year.
          type: string
          minLength: 1
          maxLength: 100
          nullable: false
        ModuleInstanceDescription:
          title: Detail of the module, this will contain special character and format instruction on how detail sould be rented in the digital platform.
          type: string
          minLength: 100
          maxLength: 4000000000
          nullable: true
        ModuleInstanceRestriction:
          title: A restriction applicable on module
          type: string
          minLength: 0
          maxLength: 1000
          nullable: true
        ModuleInstanceSubjectCollection:
          type: object
          properties:
            ModuleInstanceSubject:
              title: The subject this module teaches.
              type: array
              items:
                type: string
                minLength: 1
                maxLength: 150
              nullable: true
  
    Location:
      type: object
      required:
        - LocationName
        - LocationIdentifier
      properties:
        LocationIdentifier:
          title: Unique identifier of the UCL location.
          type: string
          minLength: 1
          maxLength: 12
          nullable: false
        LocationName:
          title: Name of the teaching location to which madule belongs to.
          type: string
          minLength: 0
          maxLength: 50
          nullable: false
    
    Faculty:
      type: object
      required:
        - FacultyName
        - FacultyCode
      properties:
        FacultyCode:
          title: Code of the teaching faculty code to which madule belongs to.
          type: string
          minLength: 3
          maxLength: 3
          nullable: false
          pattern: ^([A-Z]){3}$
        FacultyName:
          title: Name of the teaching faculty to which madule belongs to.
          type: string
          minLength: 1
          maxLength: 150
          nullable: false

    Department:
      type: object
      required:
        - DepartmentName
        - DepartmentCode
      properties:
        DepartmentCode:
          title: Teaching department code in UCL.
          type: string
          minLength: 3
          maxLength: 3
          nullable: false
          pattern: ^([A-Z]|_|\d|-)*$
        DepartmentName:
          title: Teaching department name in UCL.
          type: string
          minLength: 1
          maxLength: 150
          nullable: false
    
    AcademicUnit:
      type: object
      required:
        - Faculty
        - Department
      properties:
        Faculty:
          $ref: "#/components/schemas/Faculty"
        Department:
          $ref: "#/components/schemas/Department"
        Person:
          $ref: "#/components/schemas/Person"

    Module:
      type: "object"
      title:  Module Domain
      required:
        - ModuleIdentifier
        - ModuleTitle
        - ModuleCode
      properties:
        ModuleIdentifier:
            title: Unique system identifier of the module (Business Data object aka BDOid).
            type: string
            nullable: false
            minimum: 1
            maximum: 50
            readOnly: true    # Returned by GET, not used in POST/PUT/PATCH
            pattern: ^([A-Z]|\d)*$
        ModuleTitle:
          title: Title of the module.
          type: string
          minLength: 0
          maxLength: 120
          nullable: false
        ModuleSearchKeywords:
          title: Keywords used to search this module.
          type: string
          minLength: 0
          maxLength: 100
          nullable: true     
        ModuleCode:
          title: Module code that is unique in UCL that is in the human readable format.
          type: string
          minLength: 1
          maxLength: 12
          nullable: false
        ModuleLearningHours:
          title: 'Learning hours of the module, this is indicative only.'
          type: integer
          minimum: 0
          maximum: 9999
          format: int32
        ModuleStudyHours:
          title: 'Learning hours of the module, this is indicative only.'
          type: integer
          minimum: 0
          maximum: 9999
          format: int32
        ModuleSuperGroup:
          title: Super module grouping such as Meets with Spanish Level 1 and 2
          type: string
          minLength: 0
          maxLength: 50
          nullable: true  
        CEFRLevel:
          title: Language Modules Only CEFR level
          type: string
          minLength: 0
          maxLength: 50
          pattern: ^([A-Z]{1}\d{1}\/?)*$
        ModuleContact:
          title: Detail of the academicUnit in UCL that owns the module.
          $ref: '#/components/schemas/AcademicUnit'
        # ModuleContactInformation:
        #   title: Contact Information,
        #   $ref: '#/components/schemas/Person'
        ModuleValue:
          type: number
          format:  float
          title:  Credit value awarded to student on the successfull completion of the module.

    GeneralError:
      type: object 
      title:  General Error
      required:
        - Code
        - Messages
      properties:
        Request:
          type: string
          format: uri
          description:  It is the requested URL as it was received by API platform, It is an optional parameter.
          example:  /module/2019
        Code:
          type: string
          description:  Machine readable unique code for a specific error. It is a mandatory parameter.
        Messages:
          type: array
          items:
            type: object
            required:
              - Message
            properties:
              Message:  
                type: string
                description:  |
                  Human readable message; intended for being displayed. 
                  The message should not be longer than 254 characters.
                  A message can occur multiple times, but only once for each language. It is a mandatory parameter.
              _Lang:
                type: string
                format: lang
                example:  en
                description:  |
                  Indicates the language in which the error name is provided. 
                  It is an optional parameter, when not provided default is english 'en'
        # BackendResponse:
        #   type: string
        #   description:  |
        #     This is an optional field that could contain any error messages from the backend system such as 
        #     e.g. a stacktrace.The use of this field is restricted to communication between two backend-systems.
        #     It is an optional parameter.

  parameters:
    skipParam:
      in: "query"
      name: "$skip"
      description: | 
            System Query Option identifies a subset of the Entries in the Collection of Entries >
            identified by the Resource Path section of the URI. That subset is defined by seeking N >
            Page navigation option identifies a subset of the Entries in the Collection of Entries >
            identified by the Resource Path section of the URI. This subset is formed by selecting >
            only the first N items of the set, where N is an integer greater than or equal to zero >
            specified by this query option. If a value less than zero is specified, the URI should be >
            considered malformed. Entries into the Collection and selecting only the remaining Entries >
            (starting with Entry N+1). N is an integer greater than or equal to zero specified by this query option. >
            If a value less than zero is specified, the URI should be considered malformed.
            Entries in the Collection must first be fully ordered by the data service using default property such >
            as identifier. While no ordering semantics are mandated, to ensure repeatable results a data service must >
            always use the same semantics to obtain a full ordering across requests.
      allowReserved:  false
      schema:
        type: integer
        minimum:  1
        format: int32
        default: 0
      example:  50
    
    limitParam:
      name: "$limit"
      in: "query"
      description: |
        Page navigation option identifies a subset of the Entries in the Collection of Entries identified by the Resource Path section of the URI. 
        This subset is formed by selecting only the first N items of the set, where N is an integer greater than or equal to zero 
        specified by this query option. If a value less than zero is specified, the URI should be considered malformed.
        Entries in the Collection must first be fully ordered by the service using default property such as identifier. 
        While no ordering semantics are mandated, to ensure repeatable results a data service must always use the same 
        semantics to obtain a full ordering across requests."
      required: false
      allowEmptyValue:  false
      schema:
        type: integer
        minimum:  1
        maximum:  50
        format: int32
        default: 50
      example:  50
    selectParam:
      name: "$select"
      in: "query"
      description:  |
        Query Option identifies the same set of Entries as a URI without a `$select` query option; however, 
        the value of $select specifies that a response from an service should return a subset of the Properties which 
        would have been returned had the URI not included a $select query option.
        
        The value of a `$select` Query Option is a comma-separated list of selection clauses. 
        Each selection clause should be a Property name."
      schema:
        type: string
      #example:  ModuleTitle,ModuleTeachingDepartment,ModuleLevel,ModuleTeachingTerm,ModuleSearchKeywords,ModeOfModuleStudy,ModuleTeachingLocation ,ModuleCode,ModuleTeachingFaculty,ModuleSubject,ModuleIdentifier
    
    filterParam:
      name: "$filter"
      in: "query"
      description:  |
        Query Option identifies a subset of the Entries from the Collection of Entries. 
        Page navigation option identifies a subset of the Entries in the Collection of Entries 
        identified by the Resource Path section of the URI. This subset is formed by selecting 
        only the first N items of the set, where N is an integer greater than or equal to zero 
        specified by this query option. If a value less than zero is specified, the URI should 
        be considered malformed. The subset is determined by selecting only the Entries 
        that satisfy the predicate expression specified by the query option.
        
        The expression language that is used in `$filter` operators supports references to properties and literals. 
        
        ### Expression language structure
        ```
          property Op literal
        ```
        NOTE: API only supports following property in the expression language in this version of the API.
        * ModuleCode
        * ModuleSuperGroup

        ### Literal
        Possible literal values 
        
        | Type     | Description                                | Example   |
        |----------|--------------------------------------------|---------  |
        |string    | This should be enclosed by single quotes ''| 'ANAT0010'| 
        |boolean   | Allowed values true or false               | true      | 
        |number    | valid positive whole numbers               | 2019      | 
    
        
        ### Operator
        The operators supported in the expression language are 
        
        | Operator  | Description          |
        |-----------|----------------------|
        |Eq         | Equal                |
        |Ne         | Not equal            |    
        |Gt         | Greater than         |       
        |Ge         | Greater than or equal|               
        |Lt         | Less than            |        
        |Le         | Less than or equal   |             
        |And        | Logical and          |      
        |Or         | Logical or           |     
        |Not        | Logical negation     |           
        |( )        | Precedence grouping  |              

        #### NOTE: Only 'eq', 'and' operators are supported in this version of the API. 
        
        ### Examples
        
        | Description                       |       Example                |
        |-----------------------------------|-----------------------|
        | Returns one or more entities that has the property ModuleCode with the string ANAT0010 | $filter=ModuleCode Eq 'ANAT0010'|
        | Returns one or more entities that has the property SuperModuleGroup with the string GE001 | $filter=SuperModuleGroup Eq 'GE001'|
        | Returns one or more entities that has the property ModuleCode with the string ANAT0010 AND the SuperModuleGroup with the string GE001 | $filter=ModuleCode Eq 'ANAT0010' And SuperModuleGroup Eq 'GE001'|
       
      schema:
        type: string
      examples:
        Logical-Equal-Number:
          summary:  eq
          description:  Logical Equal
          value:  $filter=ModuleInAcademicYear eq 2019
        Logical-Equal-String:
          summary:  and
          description:  Logical Equal
          value:  $filter=ModuleCode `eq` 'ANAT0010'
        Logical-And:
          summary:  and
          description:  Logical `And`
          value:  $filter=AcademicYearCode `eq` 2019 `and` ModuleCode eq 'ANAT0010'

    AcademicYearCode:
      name: AcademicYearCode
      in: path
      required: true
      description: Academic year.
      style:  simple
      schema:
        type: integer
        format: int32
        minimum: 2017
        maximum: 2050
        nullable: false
      example:  2019
    
    ModuleDeliveryIdentifier:
      name: ModuleDeliveryIdentifier
      in: path
      required: true
      description:  Unique system identifier of the module (Business Data object aka BDOid).
      schema:
        type: string
        minimum: 1
        maximum: 50
        readOnly: true    # Returned by GET, not used in POST/PUT/PATCH
        pattern: ^([A-Z]|\d)*$
        example:  '123E4567E89b12D3A456426655440000'

    ModuleIdentifier:
      name: ModuleIdentifier
      in: path
      required: true
      description:  Unique system identifier of the module (Business Data object aka BDOid).
      schema:
        type: string
        minimum: 1
        maximum: 50
        readOnly: true    # Returned by GET, not used in POST/PUT/PATCH
        pattern: ^([A-Z]|\d)*$
        example:  '123E4567E89b12D3A456426655440000'

  # -----------------------------------------------------
  # Response
  # (Referencing from Domain.yaml is not working )
  # -----------------------------------------------------
  responses:
    modules_200_status:
      description: |
        Successfull response includes list of module (Header Infomation only, No module detail that subject to change 
        each year is not added.) 
        ```
        *[Module]
        ```
        and pagination detail if more than allowed number of modules is found
        [HATEOAS](#section/Pagination/HATEOAS) for pagination option detail. 
      content:
        application/json: &modules_200_status_structure
          schema:
            type: object
            properties:
              Response:
                type: object
                properties:
                  ModuleCollection:
                    type: object
                    properties:
                      Module:
                        type: array
                        items:
                          $ref: '#/components/schemas/Module'
        application/xml:
          <<: *modules_200_status_structure
      headers: &RateLimitHeader
        X-RateLimit-Limit:
          $ref: '#/components/headers/X-RateLimit-Limit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/X-RateLimit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/components/headers/X-RateLimit-Reset'
        Retry-After:
          $ref: '#/components/headers/Retry-After'
      # -----------------------------------------------------
      # Links
      # -----------------------------------------------------
      links:  &CommonLinks
        nextpage:
        #nextpage: # <---- arbitrary name for the link
          description: Link to get next page.
          operationId: nextpage
          # or
          # operationRef: '#/paths/Module/get'
          parameters:
            $skipParam: $request.query.$skip
            $limit: $request.query.$limit
    
    module_200_status:
      description: |
        Successfull response includes single module (Header Infomation only, No module detail that subject to change 
        each year is not added.) for the given moduleidentifier
        ```
        (**)[Module]
        ```
      content:
        application/json: &module_200_status_structure
          schema:
            type: "object"
            properties:
              Module:
                $ref: '#/components/schemas/Module'
        application/xml:
          << : *module_200_status_structure
      headers:
        <<: *RateLimitHeader

    moduleinstances_200_status:
      description: |
        Successfull response includes list of module instance and header information 
        ```
        [Module] -(moduleidentifier)-> *[Module Instance]
        ```
        and pagination detail if more than allowed number of modules is found
        [HATEOAS](#section/Pagination/HATEOAS) for pagination option detail. 
      content:
        application/json: &moduleinstances_200_status_structure
          schema:
            type: object
            properties:
              Response:
                type: object
                properties:
                    Module:
                      allOf:
                      - $ref: '#/components/schemas/Module'
                      - type: object
                        properties:  
                          ModuleInstanceCollection:
                            type: object
                            properties:
                              ModuleInstance:
                                type: array
                                items:
                                  $ref: '#/components/schemas/ModuleInstance'
        application/xml:
          << : *moduleinstances_200_status_structure
      headers:
        <<: *RateLimitHeader
      links:
        <<: *CommonLinks

    moduleinstance_200_status:
      description: |
        Successfull response includes single module instanc and header information 
        ```
        [Module] -(moduleidentifier , academicyear)-> [Module Instance]
        ```
        and pagination detail if more than allowed number of modules is found
        [HATEOAS](#section/Pagination/HATEOAS) for pagination option detail. 
      content:
        application/json: &moduleinstance_200_status_schema
          schema:
            type: object
            properties:
              Response:
                type: object
                properties:
                  Module:
                    type: object
                    allOf:
                      - $ref: '#/components/schemas/Module'
                      - type: object
                        properties:
                          ModuleInstance:
                            $ref: '#/components/schemas/ModuleInstance'
        application/xml:
          <<: *moduleinstance_200_status_schema
      headers:
        <<: *RateLimitHeader

    moduleinstancesfull_200_status:
      description: |
            Successfull response includes list of module instances that matches the passed criteria
            ```
            *[Module Instance]
            ```
            and pagination detail if more than allowed number of modules is found
            [HATEOAS](#section/Pagination/HATEOAS) for pagination option detail. 
      content:
        application/json: &moduleinstancesfull_200_status_structure
          schema:
            type: object
            properties:
              Response:
                type: object
                properties:
                  ModuleInstanceCollection:
                    type: object
                    properties:
                      ModuleInstance:
                        type: array
                        items:
                          $ref: Domains.yaml#/components/schemas/ModuleInstanceFull
        application/xml:
          << : *moduleinstancesfull_200_status_structure
      headers:
        <<: *RateLimitHeader
      links:
        <<: *CommonLinks

    moduledeliveries_200_status:
      description: |
        Successfull response includes list of module deliveries, instance and header information for the given moduleidentifier and academicyear
        ```
        [Module] -(moduleidentifier, academicyear)-> [Module Instance] -(moduleidentifier, academicyear)-> *[ModuleDelivery] -(ModuleDeliveryIdentifier)->*[ModuleDeliveryAssessment]
        ```
        and pagination detail if more than allowed number of moduledeliveries found
        [HATEOAS](#section/Pagination/HATEOAS) for pagination option detail. 
      content:
        application/json: &moduledeliveries_200_status
          schema:
            type: object
            properties:
              Response:
                type: object
                properties:
                  Module:
                    allOf:
                      - $ref: '#/components/schemas/Module'
                      - type: object
                        properties:
                          ModuleInstance:
                            allOf:
                            - $ref: '#/components/schemas/ModuleInstance'
                            - type: object
                              properties:
                                ModuleDeliveryCollection:
                                  type: object
                                  properties:
                                    ModuleDelivery:
                                      type: array
                                      items:
                                        $ref: '#/components/schemas/ModuleDelivery'
                          
                            
                        
        application/xml:
          << : *moduledeliveries_200_status
      headers:
        <<: *RateLimitHeader
      links:
        <<: *CommonLinks

    moduledelivery_200_status:
      description: |
        Successfull response includes single module deliverie delivery information for the given moduledeliveryidentifier
        ```
        [ModuleDelivery] -(ModuleDeliveryIdentifier)->*[ModuleDeliveryAssessment]
        ```
        and pagination detail if more than allowed number of moduledeliveries found
        [HATEOAS](#section/Pagination/HATEOAS) for pagination option detail. 
      content:
        application/json: &moduledelivery_200_status
          schema:
            type: object
            properties:
              Response:
                type: object
                properties:
                  ModuleDeliveryCollection:
                    type: object
                    properties:
                      ModuleDelivery:
                        type: array
                        items:
                          allOf:
                          - type: object
                            properties:
                              ModuleIdentifier:
                                $ref: "#/components/schemas/Module/properties/ModuleIdentifier"
                          - $ref: '#/components/schemas/ModuleDelivery'
        application/xml:
          << : *moduledelivery_200_status
      headers:
        <<: *RateLimitHeader
      links:
        <<: *CommonLinks
  # -----------------------------------------------------
  # Common Error
  # (Referencing from Domain.yaml is not working )
  # -----------------------------------------------------
    GeneralError:
      description: General Error Code, if none of the others are applicable.
      content:
        application/json:
          schema:
            $ref: 'Domains.yaml#/components/schemas/GeneralError'
        application/xml:
          schema:
            $ref: 'Domains.yaml#/components/schemas/GeneralError'

  #########################
  # Common headers
  # (except request headers - they are defined as parameters)
  #########################
  headers:
    X-RateLimit-Limit:
      description: Request limit per time window
      schema:
        type: integer
        format: int32
      example: 100
      required: true
    X-RateLimit-Remaining:
      description: Remaining requests for the current time window
      schema:
        type: integer
        format: int32
      example: 94
      required: true
    X-RateLimit-Reset:
      description: Time to the current window ends, in seconds from the current time.
      schema:
        type: integer
        format: int32
      example: 1553528925
      required: true
    Retry-After:
      description: |
        When an application exceeds the rate limit for a given API endpoint, the API will return a 
        [HTTP 429 “Too Many Requests”](http://tools.ietf.org/html/rfc6585)  response code, 
        and this response header indicate the remaining time window before the rate limit resets, 
        in UTC  [epoch seconds](http://en.wikipedia.org/wiki/Unix_time)
      schema:
        type: integer
        format: int32
      required: false
      example: 1553528925

# pathitems:
  # EntityOperations:
  #   get:
  #     description: "Returns a pet based on ID"
  #     summary: "Find pet by ID"
  #     responses:
  #       default:
  #         $ref: '#/responses/GeneralError'
...
