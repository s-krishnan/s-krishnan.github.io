{"Response":{"Module":{"ModuleCode":"COMP0004","ModuleIdentifier":"70155CE473F411E89A86FAE8722E8321","ModuleTitle":"Object-Oriented Programming","ModuleContact":{"Faculty":{"FacultyCode":"ENG","FacultyName":"Faculty of Engineering Sciences"},"Department":{"DepartmentCode":"COMPS_ENG","DepartmentName":"Computer Science"}},"ModuleValue":"15","ModuleStudyHours":"150","ModuleLearningHours":"60","ModuleSearchKeywords":"OBJECT-ORIENTED PROGRAMMING, JAVA, XML","Email":"cs.undergraduate@ucl.ac.uk","ModuleSuperGroup":"","CEFRLevel":"","ModuleInstance":{"AcademicYearCode":"2019","AcademicYearDescription":"2019/20 academic  year","ModuleInstanceDescription":"<p>\n\t<strong>Aims:</strong><br />\n\tThis module provides a thorough introduction to object-oriented (OO) programming. The key object-oriented concepts such as class design, inheritance, dynamic binding and interfaces, are introduced, along with design strategies for smaller sized object-oriented programs. Material is also included on data representation and data processing, the implementation of common data structures such as lists, trees and hash tables, basic cloud-based applications, and on development tools and practices. To learn how to apply object-oriented design concepts, and practice programming skills, the module has a substantial practical element, with weekly lab classes, sets of exercise questions, and an individual programming project.<br />\n\t<br />\n\t<strong>Learning outcomes:</strong><br />\n\tOn successful completion of the module, a student will be able to:<br />\n\t1.Design and implement smaller-scale object-oriented programs;<br />\n\t2.Have a good knowledge of key object-oriented principles and design strategies;<br />\n\t3.Read, write, and process data sets using object-oriented techniques;<br />\n\t4.Understand how core data structures are implemented using classes;<br />\n\t5.Desiging and running basic OO applications in the cloud;<br />\n\t6.Use programming tools such as an integrated development environment (IDE), debugger, and version control;<br />\n\t<br />\n\t<br />\n\t<strong>Content:</strong><br />\n\tTopics covered in lectures or via online material:<br />\n\t<br />\n\tObject-Oriented Principles:<br />\n\t-Taking an object-oriented approach to software development;<br />\n\t-Classes and the use of abstractions;<br />\n\t-Key design principles and development practices;<br />\n\t<br />\n\tObject-Oriented Programming:<br />\n\t-Designing and implementing classes;<br />\n\t-Identifying and implementing class relationships;<br />\n\t-Using abstract classes, interfaces and inheritance;<br />\n\t-Developing smaller-scale programs taking an object-oriented approach;<br />\n\t-Effective object-oriented design and programming practices;<br />\n\t-Documenting designs using class diagrams;<br />\n\t-The design of basic cloud-based applications;<br />\n\t<br />\n\tData Representation:<br />\n\t-Implementing common data structures;<br />\n\t-Storing data in files and basic databases;<br />\n\t-Processing data using streams;<br />\n\t<br />\n\t<strong>Requisites:</strong><br />\n\tIn order to be eligible to select this module, a student must Â¿be registered on a programme for which it is a formally-approved option or elective choice AND must have taken Principles of Programming (COMP0002) in Term 1.</p>\n","ModuleInstanceRestriction":"This module is restricted to students registered on:\nBSc Computer Science \nMEng Computer Science \nMEng Mathematical Computation\n","ModuleInstanceSubjectCollection":{"ModuleInstanceSubject":"Computer Science"},"ModuleDeliveryCollection":{"ModuleDelivery":{"ModuleDeliveryIdentifier":"7023CEC873F411E89A86FAE8722E8321","LevelOfStudy":"Undergraduate","ModuleDeliveryPeriod":{"PeriodCode":"T2","PeriodTitle":"Term 2"},"AcademicLevel":{"AcademicLevelCode":"L4","AcademicLevelTitle":"FHEQ Level 4"},"ModuleDeliveryType":"","ModeOfStudy":"Face-to-face","ModuleDeliveryTutor":{"PersonIdentifier":"GAROB82","Name":"Graham Alan Roberts","Email":""},"PreviousYearStudentCount":"160","NumberOfStudents":"160","ModuleDeliveryLocation":{"LocationIdentifier":"","LocationName":""},"ModuleDeliveryAssessment":{"AssessmentGroupCollection":{"@DefaultAssessmentGroup":"NULL","AssessmentGroup":[{"AssessmentGroupCode":"NULL","AssessmentGroupName":"","AssessmentComponentList":{"AssessmentComponent":[{"AssessmentComponentTitle":"Coursework two (1,800 words)","AssessmentComponentWeightPercentage":"35"},{"AssessmentComponentTitle":"Coursework three","AssessmentComponentWeightPercentage":"15"},{"AssessmentComponentTitle":"Coursework one (3,000 words)","AssessmentComponentWeightPercentage":"50"}]}},{"AssessmentGroupCode":"A","AssessmentGroupName":"","AssessmentComponentList":{"AssessmentComponent":[{"AssessmentComponentTitle":"Coursework three","AssessmentComponentWeightPercentage":"15"},{"AssessmentComponentTitle":"Coursework two (1,800 words)","AssessmentComponentWeightPercentage":"35"},{"AssessmentComponentTitle":"Coursework one (3,000 words)","AssessmentComponentWeightPercentage":"50"}]}}]}}}}}}}}